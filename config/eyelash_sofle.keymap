#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // default: 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // default: 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;
            time-to-max-speed-ms = <900>;
            delay-ms = <0>;
        };

        msc {
            acceleration-exponent = <1>;
            time-to-max-speed-ms = <400>;
            delay-ms = <0>;
        };

        // Add this behavior for ZMK Studio
        studio_unlock: studio_unlock {
            compatible = "zmk,behavior-studio-unlock";
            label = "STUDIO_UNLOCK";
            #binding-cells = <0>;
        };
    };

    combos {
        compatible = "zmk,combos";
        require-prior-idle-ms = <50>;
        timeout-ms = <50>;

        // Left Hand
        combo_lpar {                      // e+r = (
            key-positions = <16 17>;      // E is 16, R is 17
            bindings = <&kp LPAR>;
        };
        combo_lbrk {                      // d+f = [
            key-positions = <29 30>;      // D is 29, F is 30
            bindings = <&kp LBKT>;
        };
        combo_lbrc {                      // c+v = {
            key-positions = <42 43>;      // C is 42, V is 43
            bindings = <&kp LBRC>;
        };
        combo_less {                      // r+t = <
            key-positions = <17 18>;      // R is 17, T is 18
            bindings = <&kp LT>;
        };
        combo_equal {                     // f+g = =
            key-positions = <30 31>;      // F is 30, G is 31
            bindings = <&kp EQUAL>;
        };
        combo_plus {                      // v+b = +
            key-positions = <43 44>;      // V is 43, B is 44
            bindings = <&kp PLUS>;
        };

        // Right Hand
        combo_greater {                   // y+u = >
            key-positions = <20 21>;      // Y is 20, U is 21
            bindings = <&kp GT>;
        };
        combo_rpar {                      // u+i = )
            key-positions = <21 22>;      // U is 21, I is 22
            bindings = <&kp RPAR>;
        };
        combo_rbrk {                      // j+k = ]
            key-positions = <34 35>;      // J is 34, K is 35
            bindings = <&kp RBKT>;
        };
        combo_rbrc {                      // m+, = }
            key-positions = <47 48>;      // M is 47, COMMA is 48
            bindings = <&kp RBRC>;
        };
        combo_minus {                     // h+j = -
            key-positions = <33 34>;      // H is 33, J is 34
            bindings = <&kp MINUS>;
        };
        combo_under {                     // n+m = _
            key-positions = <46 47>;      // N is 46, M is 47
            bindings = <&kp UNDER>;
        };

        // New combos per your request
        combo_pipe_comma_period {         // ,+. = |
            key-positions = <48 49>;      // COMMA is 48, PERIOD is 49
            bindings = <&kp PIPE>;
        };
        combo_bslash_period_slash {       // .+/ = backslash
            key-positions = <49 50>;      // PERIOD is 49, SLASH is 50
            bindings = <&kp BSLH>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            display-name = "main";
// --------------------------------------------------------------------------------------------------------------------------
// | GRAVE       |  1   |  2   |  3   |  4    |  5    |                |  6     |  7     |  8   |  9   |  0   | DELETE      |
// | MT LGUI,TAB |  Q   |  W   |  E   |  R    |  T    |                |  Y     |  U     |  I   |  O   |  P   | BKSPC       |
// | MT LCTL,ESC |  A   |  S   |  D   |  F    |  G    |                |  H     |  J     |  K   |  L   |  ;   | MT(RCTL, ') |
// | LSHIFT      |  Z   |  X   |  C   |  V    |  B    |       || MUSIC |  N     |  M     |  ,   |  .   | NONE | RSHIFT      |
//                      | NONE | NONE | LALT  | LOWER | SPACE || ENTER | RAISE  | RALT   | NONE | NONE |
            bindings = <
&kp GRAVE       &kp N1  &kp N2  &kp N3      &kp N4      &kp N5      &kp C_VOLUME_UP     &kp N6          &kp N7      &kp N8      &kp N9      &kp N0          &kp DELETE
&mt LGUI TAB    &kp Q   &kp W   &kp E       &kp R       &kp T       &kp C_VOLUME_DOWN   &kp Y           &kp U       &kp I       &kp O       &kp P           &kp BACKSPACE
&mt LCTRL ESC   &kp A   &kp S   &kp D       &kp F       &kp G       &kp C_PLAY          &kp H           &kp J       &kp K       &kp L       &kp SEMICOLON   &mt RCTRL SQT
&kp LSHIFT      &kp Z   &kp X   &kp C       &kp V       &kp B       &kp C_NEXT          &kp N           &kp M       &kp COMMA   &kp PERIOD  &kp FSLH        &kp RIGHT_SHIFT
&none           &none   &none   &kp LALT    &mo 1       &kp SPACE   &kp C_MUTE          &kp RETURN      &mo 2       &kp RALT    &none       &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_1 {
            display-name = "lower";
// --------------------------------------------------------------------------------------------------------------------------
// | F12         |  F1  |  F2  |  F3  |  F4   |  F5   |                |  F6    |  F7    |  F8  |  F9  |  F0  | TRANS       |
// | TRANS       | NONE | NONE | NONE | NONE  | NONE  |                | NONE   | NONE   | NONE | NONE | NONE | TRANS       |
// | TRANS       | NONE | NONE | NONE | NONE  | NONE  |                | MINUS  | EQUAL  | NONE | NONE | NONE | TRANS       |
// | TRANS       | NONE | NONE | NONE | DEL   | BKSPC |       || MSCRL | UNDRSC | PLUS   | NONE | NONE | NONE | TRANS       |
//                      | NONE | NONE | TRANS | TRANS | TRANS || TRANS | TRANS  | TRANS  | NONE | NONE |
            bindings = <
&none           &kp F1  &kp F2  &kp F3      &kp F4      &kp F5      &msc SCRL_UP     &kp F6          &kp F7      &kp F8      &kp F9      &kp F10         &trans
&trans          &none   &none   &none       &none       &none       &msc SCRL_DOWN   &none           &none       &none       &none       &none           &trans
&trans          &none   &none   &none       &none       &none       &msc SCRL_LEFT   &kp MINUS       &kp EQUAL   &none       &none       &none           &trans
&trans          &none   &none   &none       &kp DEL     &kp BSPC    &msc SCRL_RIGHT  &kp UNDER       &kp PLUS    &none       &none       &kp PSCRN       &trans
&none           &none   &none   &trans      &trans      &trans      &mkp LCLK        &trans          &trans      &trans      &none       &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            display-name = "raise";
// --------------------------------------------------------------------------------------------------------------------------
// | NONE        | BT1  | BT2  |  BT3 |  BT4  | BT5   |                | NONE   | NONE   | NONE | NONE | NONE | stdio_unlck |
// | TRANS       | NONE | NONE | NONE | NONE  | NONE  |                | HOME   | PGDN   | PGUP | END  | NONE | TRANS       |
// | TRANS       | BRI  | TOG  | BRD  | NONE  | NONE  |                | LEFT   | DOWN   | UP   | RIGHT| NONE | TRANS       |
// | TRANS       | HUI  | TOG  | HUD  | NONE  | NONE  |       || MOUSE | LBKT   | RBKT   | LBRC | RBRC | BSLH | PIPE        |
//                      | NONE | NONE | TRANS | TRANS | TRANS || TRANS | TRANS  | TRANS  | NONE | NONE |

            bindings = <
&none       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &mmv MOVE_UP      &none       &none       &none       &none       &none       &studio_unlock
&trans      &none         &none         &none         &none         &none         &mmv MOVE_DOWN    &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &none       &trans
&trans      &rgb_ug RGB_BRI  &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &none  &none       &mmv MOVE_LEFT    &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &none       &trans
&trans      &rgb_ug RGB_HUI  &rgb_ug RGB_TOG  &rgb_ug RGB_HUD  &none  &none       &mmv MOVE_RIGHT   &kp LBKT    &kp RBKT    &kp LBRC    &kp RBRC    &kp BSLH    &kp PIPE
&none       &none         &none         &trans        &trans        &trans        &mkp LCLK         &mkp RCLK   &trans      &mkp MCLK   &none       &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
        layer_3 {
            status = "reserved";
        };
        layer_4 {
            status = "reserved";
        };
    };
};
